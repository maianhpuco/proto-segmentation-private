# base config for training object classification model on COCO

Trainer.gpus = 1

construct_PPNet.base_architecture = 'resnet34'
construct_PPNet.pretrained = True

construct_PPNet.prototype_shape = (800, 512, 1, 1)
construct_PPNet.num_classes = 80
construct_PPNet.prototype_activation_function = 'log'
construct_PPNet.add_on_layers_type = 'regular'

train_cls.model_image_size = 224
train_cls.random_seed = 20220227
train_cls.early_stopping_patience_main = 32
train_cls.early_stopping_patience_last_layer = 8
train_cls.start_checkpoint = ''

ImageClassificationDataModule.dataloader_n_jobs = 16
ImageClassificationDataModule.norm_mean = [0.485, 0.456, 0.406]
ImageClassificationDataModule.norm_std = [0.229, 0.224, 0.225]
ImageClassificationDataModule.train_batch_size = 80
ImageClassificationDataModule.test_batch_size = 100
ImageClassificationDataModule.train_push_batch_size = 75

Trainer.max_epochs = 1000
Trainer.min_epochs = 10

ImageClassificationModule.num_warm_epochs = 5

ImageClassificationModule.loss_weight_crs_ent = 1.0
ImageClassificationModule.loss_weight_clst = 0.8
ImageClassificationModule.loss_weight_border = 0.0
ImageClassificationModule.loss_weight_sep = -0.08
ImageClassificationModule.loss_weight_l1 = 1e-4

ImageClassificationModule.joint_optimizer_lr_features = 1e-4
ImageClassificationModule.joint_optimizer_lr_add_on_layers = 3e-3
ImageClassificationModule.joint_optimizer_lr_prototype_vectors = 3e-3
ImageClassificationModule.joint_optimizer_weight_decay = 1e-3

ImageClassificationModule.warm_optimizer_lr_add_on_layers = 3e-3
ImageClassificationModule.warm_optimizer_lr_prototype_vectors = 3e-3
ImageClassificationModule.warm_optimizer_weight_decay = 1e-3

ImageClassificationModule.last_layer_optimizer_lr = 1e-4

ImageClassificationModule.gradient_clipping = 5

ImageClassificationModule.lr_step_size = 10
ImageClassificationModule.lr_gamma = 0.1
