# Cityscapes with deeplabv2 and TESNet

Trainer.gpus = 1

construct_PPNet.base_architecture = 'deeplabv2_resnet101'
construct_PPNet.pretrained = False

construct_PPNet.prototype_shape = (190, 64, 1, 1)
construct_PPNet.num_classes = 19
construct_PPNet.prototype_activation_function = 'log'
construct_PPNet.add_on_layers_type = 'deeplab'

deeplabv2_resnet101_features.deeplab_n_features = 256

train.model_image_size = 1024
train.random_seed = 20220227
train.early_stopping_patience_main = 48
train.early_stopping_patience_last_layer = 32
train.start_checkpoint = ''

# these are for ImageNet and COCO
PatchClassificationDataset.mean = [0.485, 0.456, 0.406]
PatchClassificationDataset.std = [0.229, 0.224, 0.225]

# mean and STD for cityscapes
# PatchClassificationDataset.mean = [0.28689554, 0.32513303, 0.28389177]
# PatchClassificationDataset.std = [0.18696375, 0.19017339, 0.18720214]

PatchClassificationDataset.transpose_ann = False
PatchClassificationDataset.image_margin_size = 512
PatchClassificationDataset.patch_size = 1
PatchClassificationDataset.num_classes = 20
PatchClassificationDataset.window_size = (513, 513)
PatchClassificationDataset.object_masks = True
PatchClassificationDataset.only_19_from_cityscapes = True

PatchClassificationDataModule.push_length_multiplier = 32
PatchClassificationDataModule.dataloader_n_jobs = 24
DataLoader.batch_size = 16

Trainer.max_epochs = 2000
Trainer.min_epochs = 100

PatchClassificationModule.num_warm_epochs = 2000

PatchClassificationModule.target_tau = 0.5
PatchClassificationModule.tau_decrease_r = 0.0000035  # ~0.5 after 250 epochs
PatchClassificationModule.update_tau_every_n = 1500

PatchClassificationModule.decrease_lr_after_batches = 55800  # ~300 epochs

PatchClassificationModule.loss_weight_crs_ent = 1.0
PatchClassificationModule.loss_weight_clst = 0.8
PatchClassificationModule.loss_weight_sep = -0.08
PatchClassificationModule.loss_weight_l1 = 1e-4

PatchClassificationModule.joint_optimizer_lr_features = 1e-5
PatchClassificationModule.joint_optimizer_lr_add_on_layers = 3e-4
PatchClassificationModule.joint_optimizer_lr_prototype_vectors = 3e-4
PatchClassificationModule.joint_optimizer_weight_decay = 5e-4

PatchClassificationModule.warm_optimizer_lr_add_on_layers = 2e-3
PatchClassificationModule.warm_optimizer_lr_prototype_vectors = 2e-3
PatchClassificationModule.warm_optimizer_weight_decay = 1e-5

PatchClassificationModule.last_layer_optimizer_lr = 1e-5

PatchClassificationModule.warmup_batches = 0
PatchClassificationModule.gradient_clipping = None

PatchClassificationModule.ignore_void_class = True

ReduceLROnPlateau.mode = 'max'
ReduceLROnPlateau.factor = 0.1
ReduceLROnPlateau.patience = 24
ReduceLROnPlateau.min_lr = 1e-7

PPNet.void_negative_weight = None
PPNet.void_class = False
PPNet.bottleneck_stride = 1
PPNet.patch_classification = True
PPNet.argmax_only = False
PPNet.tesnet = False

# For testing
# Trainer.overfit_batches = 10
# Trainer.limit_train_batches = 100
# Trainer.limit_val_batches = 50
# Trainer.limit_test_batches = 50
